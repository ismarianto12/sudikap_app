import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:sistem_kearsipan/repository/loginRepo.dart';
part 'login_event.dart';
part 'login_state.dart';

class LoginBloc extends Bloc<LoginEvent, LoginState> {
  final loginRepo loginrepo;
  LoginBloc({required this.loginrepo}) : super(LoginInitial()) {
    assert(loginrepo != null);
    on<LoginSubmitted>(_onLoginSubmitted);
  }

  @override
  void _onLoginSubmitted(LoginSubmitted event, Emitter<LoginState> emit) async {
    // if (event is LoginSubmitted) {
    emit(LoginLoading());
    try {
      var param = loginrepo.authenticate(event.username, event.password);
      print(param);
      emit(LoginInitial());
    } catch (e) {
      // yield LoginFailure(error: e.toString());
      emit(LoginFailure(error: e.toString()));
    }
    // }
  }
}
